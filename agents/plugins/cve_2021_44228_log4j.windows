<#
 Author: thl-cmk[at]outlook[dot]com
 URL   : https://thl-cmk.hopto.org
 Date  : 2021-12-18

 Wrapper around: https://github.com/logpresso/CVE-2021-44228-Scanner

 plugin for check_mk windows agent

 2021-12-21: fixed missing $MK_CONFDIR variable (THX to Rene@frorum.checkmk)
 2021-12-21: fixed OPTION handling (THX to Rene@frorum.checkmk)
 2021-12-23: fixed exit code other than 0  (THX to cmasopust[at]greentube[dot]com)
             execute scanner as cmd job to pass path/file names with spaces (THX to andreas-doehler@forum.checkmk)
             init powershell console (buffer/window size/encoding) (THX to andreas-doehler@forum.checkmk)
 2022-01-05: changed reading variables from file
             added timeout handling to match linux script version
 2021-01-10: added output of json report as separate section
 2022-01-14: join output of json report to one line

#>

###

$pshost = Get-Host              # Get the PowerShell Host.
$pswindow = $pshost.UI.RawUI    # Get the PowerShell Host's UI.

$newsize = $pswindow.BufferSize # Get the UI's current Buffer Size.
$newsize.height = 300          # Set the new buffer's heigt to 300 lines.
$newsize.width = 200            # Set the new buffer's width to 200 columns.
$pswindow.buffersize = $newsize # Set the new Buffer Size as active.

$newsize = $pswindow.windowsize # Get the UI's current Window Size.
$newsize.width = 200            # Set the new Window Width to 200 columns.
$pswindow.windowsize = $newsize # Set the new Window Size as active.

[Console]::OutputEncoding = [System.Text.UTF8Encoding]::new($true)

###

$SCRIPT_VERSION="20220114.v0.0.4"
$BAKERY_VERSION="N/A"
$OPTIONS="--all-drives"
$EXECUTABLE="C:\ProgramData\checkmk\agent\bin\log4j2-scan.exe"
$PLUGIN_TIMEOUT=300
$ATTACH_REPORT="None"


# config file directory
$MK_CONFDIR = $env:MK_CONFDIR

# Fallback if no MK_CONFDIR is set
if (!$MK_CONFDIR) {
    $MK_CONFDIR= "$env:ProgramData\checkmk\agent\config"
}

if (Test-Path -Path $MK_CONFDIR\cve_2021_44228_log4j.cfg -PathType Leaf) {
    Get-Content $MK_CONFDIR\cve_2021_44228_log4j.cfg | Where-Object {$_.length -gt 0} | Where-Object {!$_.StartsWith("#")} | ForEach-Object {
        $var = $_.Split('=',2).Trim()
        New-Variable -Scope Script -Force -Name $var[0] -Value $var[1]
    }
}

if (Test-Path -Path $ATTACH_REPORT -PathType Leaf) {
    Remove-Item $ATTACH_REPORT
}



Write-Output "<<<cve_2021_44228_log4j:sep(0)>>>"
# 2021-12-19T22:08:52+01:00
Get-Date -Format "yyyy-MM-ddTHH:mm:ssK"
Write-Output "SCAN OPTIONS: $OPTIONS"
Write-Output "SCRIPT VERSION: $SCRIPT_VERSION"
Write-Output "BAKERY VERSION: $BAKERY_VERSION"
Write-Output "----------------------------------------------------"

if (Test-Path -Path $EXECUTABLE -PathType Leaf) {
    $EXECUTABLE = $EXECUTABLE + " " + $OPTIONS
} else {
    Write-Output "ERROR: Executable not found: $EXECUTABLE"
    exit 0
}

$JOB_LOG4J = Start-Job -ScriptBlock { cmd /c $using:EXECUTABLE } -Name "log4j2"

$TIME_LEFT = $PLUGIN_TIMEOUT
while (($JOB_LOG4J.state -eq "running") -and ($TIME_LEFT -gt 0)) {
    Start-Sleep -Seconds 10 # Sleep for 10 seconds
    $TIME_LEFT -= 10
}

if ($JOB_LOG4J.state -eq "completed") {
    Receive-Job -Job $JOB_LOG4J
}  elseif ($JOB_LOG4J.state -eq "running") {  # still running kill it on exit
    $PLUGIN_TIMEOUT = "$PLUGIN_TIMEOUT" + "s"
    Write-Output "ERROR: scanner killed on timeout ($PLUGIN_TIMEOUT)."
} else {
    Write-Output "ERROR: Job did not complete successfully."
    Write-Output "ERROR: Job status: $JOB_LOG4J.state"
}

Remove-Job -Force $JOB_LOG4J

if (Test-Path -Path $ATTACH_REPORT -PathType Leaf) {
    Write-Output "<<<cve_2021_44228_log4j_report:sep(0)>>>"
    (get-content  $ATTACH_REPORT) -join " "
    Write-Output ""
    Remove-Item $ATTACH_REPORT
}

exit 0

<#
 Author: thl-cmk[at]outlook[dot]com
 URL   : https://thl-cmk.hopto.org
 Date  : 2021-12-18

 Wrapper around: https://github.com/logpresso/CVE-2021-44228-Scanner

 plugin for check_mk windows agent

 2021-12-21: fixed missing $MK_CONFDIR variable (THX to Rene@frorum.checkmk)
 2021-12-21: fixed OPTION handling (THX to Rene@frorum.checkmk)
 2021-12-23: fixed exit code other than 0  (THX to cmasopust[at]greentube[dot]com)
             execute scanner as cmd job to pass path/file names with spaces (THX to andreas-doehler@forum.checkmk)
             init powershell console (buffer/window size/encoding) (THX to andreas-doehler@forum.checkmk)
#>

###

$pshost = Get-Host              # Get the PowerShell Host.
$pswindow = $pshost.UI.RawUI    # Get the PowerShell Host's UI.

$newsize = $pswindow.BufferSize # Get the UI's current Buffer Size.
$newsize.height = 300          # Set the new buffer's heigt to 300 lines.
$newsize.width = 200            # Set the new buffer's width to 200 columns.
$pswindow.buffersize = $newsize # Set the new Buffer Size as active.

$newsize = $pswindow.windowsize # Get the UI's current Window Size.
$newsize.width = 200            # Set the new Window Width to 200 columns.
$pswindow.windowsize = $newsize # Set the new Window Size as active.

[Console]::OutputEncoding = [System.Text.UTF8Encoding]::new($true)

###



$SCRIPTVERSION="2021-12-23-0.0.2d"
$OPTIONS="--all-drives"
$EXECUTABLE="C:\ProgramData\checkmk\agent\bin\log4j2-scan.exe"

# config file directory
$MK_CONFDIR = $env:MK_CONFDIR

# Fallback if no MK_CONFDIR is set
if (!$MK_CONFDIR) {
    $MK_CONFDIR= "$env:ProgramData\checkmk\agent\config"
}

if (Test-Path -Path $MK_CONFDIR\cve_2021_44228_log4j.cfg -PathType Leaf) {
    $OPTIONS=(Select-String -Path $MK_CONFDIR\cve_2021_44228_log4j.cfg -Pattern "OPTIONS=")
}

$OPTIONS=($OPTIONS -split "=")[1]

Write-Output "<<<cve_2021_44228_log4j:sep(0)>>>"
# 2021-12-19T22:08:52+01:00
Get-Date -Format "yyyy-MM-ddTHH:mm:ssK"
Write-Output "SCAN OPTIONS: $OPTIONS"
Write-Output "SCRIPT VERSION: $SCRIPTVERSION"
Write-Output "----------------------------------------------------"

if (Test-Path -Path $EXECUTABLE -PathType Leaf) {
    $EXECUTABLE = $EXECUTABLE + " " + $OPTIONS
} else {
    Write-Output "ERROR: Executable not found: $EXECUTABLE"
    exit 0
}

$JOB_LOG4J = Start-Job -ScriptBlock { cmd /c $using:EXECUTABLE } -Name "log4j2"

while ($JOB_LOG4J.state -eq "running") {
    Start-Sleep -Seconds 10 # Sleep for 10 seconds
}

if ($JOB_LOG4J.state -eq "completed") {
    Receive-Job -Job $JOB_LOG4J
} else {
    Write-Output "ERROR: Job did not complete successfully."
    Write-Output "ERROR: Job status: $JOB_LOG4J.state"

}

Remove-Job $JOB_LOG4J

exit 0
